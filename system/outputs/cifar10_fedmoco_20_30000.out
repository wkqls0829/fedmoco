==================================================
Algorithm: FedMoCo
Local batch size: 10
Local steps: 1
Local learing rate: 0.005
Total number of clients: 10
Clients join in each round: 1.0
Client drop rate: 0.0
Time select: False
Time threthold: 10000
Global rounds: 1000
Running times: 1
Dataset: Cifar10
Local model: resnet
Using device: cuda
Cuda device id: 2
==================================================

============= Running time: 0th =============
Creating server and clients ...
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=10, bias=True)
)

Join ratio / total clients: 1.0 / 10
Finished creating server and clients.

-------------Round number: 0-------------

Evaluate global model
Averaged Train Loss: 2.3213
Averaged Test Accuracy: 0.0206
Averaged Test AUC: 0.4350
Std Test Accuracy: 0.0298
Std Test AUC: 0.1952
[0.09072415 0.14356265 0.09116409 0.05539172 0.16277029 0.11993277
 0.03777257 0.08346928 0.08735958 0.1278529 ]
------------------------- time cost ------------------------- 32.37436294555664

-------------Round number: 1-------------

Evaluate global model
Averaged Train Loss: 1.7814
Averaged Test Accuracy: 0.3779
Averaged Test AUC: 0.8121
Std Test Accuracy: 0.1670
Std Test AUC: 0.1153

[0.08792754 0.15521492 0.07551994 0.12253146 0.14123608 0.08315772
 0.08968582 0.04170873 0.15589091 0.04712689]
------------------------- time cost ------------------------- 29.00168514251709

-------------Round number: 2-------------

Evaluate global model
Averaged Train Loss: 1.5992
Averaged Test Accuracy: 0.3609
Averaged Test AUC: 0.8382
Std Test Accuracy: 0.1460
Std Test AUC: 0.0961
[0.03984965 0.15993104 0.15506793 0.08698161 0.11775789 0.08248965
 0.04853166 0.14682942 0.08231728 0.08024387]
------------------------- time cost ------------------------- 29.029884099960327

-------------Round number: 3-------------

Evaluate global model
Averaged Train Loss: 1.5535
Averaged Test Accuracy: 0.3446
Averaged Test AUC: 0.8353
Std Test Accuracy: 0.2203
Std Test AUC: 0.1448
[0.03624097 0.04323877 0.14819617 0.0828087  0.08123367 0.17645871
 0.15844778 0.11750334 0.07132515 0.08454673]
------------------------- time cost ------------------------- 26.84931254386902

-------------Round number: 4-------------

Evaluate global model
Averaged Train Loss: 1.6449
Averaged Test Accuracy: 0.3352
Averaged Test AUC: 0.8234
Std Test Accuracy: 0.2169
Std Test AUC: 0.1331
[0.08163704 0.08365525 0.03999578 0.18830725 0.03479808 0.15572672
 0.15120839 0.07130475 0.08512329 0.10824346]
------------------------- time cost ------------------------- 26.740097284317017

-------------Round number: 5-------------

Evaluate global model
Averaged Train Loss: 1.7792
Averaged Test Accuracy: 0.2254
Averaged Test AUC: 0.8123
Std Test Accuracy: 0.2142
Std Test AUC: 0.1241
[0.07067804 0.0350508  0.08389284 0.03388599 0.10145213 0.0831282
 0.15388632 0.0890781  0.15719143 0.19175617]
------------------------- time cost ------------------------- 26.56653380393982

-------------Round number: 6-------------

Evaluate global model
Averaged Train Loss: 1.6634
Averaged Test Accuracy: 0.3473
Averaged Test AUC: 0.8313
Std Test Accuracy: 0.2085
Std Test AUC: 0.1397
[0.20217075 0.06527633 0.15920557 0.0909296  0.03017658 0.03448661
 0.08141242 0.15071234 0.09885955 0.08677025]
------------------------- time cost ------------------------- 26.74592900276184

-------------Round number: 7-------------

Evaluate global model
Averaged Train Loss: 1.5601
Averaged Test Accuracy: 0.3632
Averaged Test AUC: 0.8494
Std Test Accuracy: 0.2319
Std Test AUC: 0.1306
[0.06220313 0.07929663 0.09953521 0.17458463 0.03071564 0.08770825
 0.16351331 0.07640352 0.0298102  0.19622947]
------------------------- time cost ------------------------- 26.745335817337036

-------------Round number: 8-------------

Evaluate global model
Averaged Train Loss: 1.6053
Averaged Test Accuracy: 0.3191
Averaged Test AUC: 0.8442
Std Test Accuracy: 0.2407
Std Test AUC: 0.1238
[0.09454581 0.05663954 0.1740573  0.07995608 0.15817209 0.08286694
 0.03227066 0.02635342 0.21296722 0.08217094]
------------------------- time cost ------------------------- 27.21115493774414

-------------Round number: 9-------------

Evaluate global model
Averaged Train Loss: 1.5826
Averaged Test Accuracy: 0.3509
Averaged Test AUC: 0.8463
Std Test Accuracy: 0.2366
Std Test AUC: 0.1379
