==================================================
Algorithm: FedMGDA
Local batch size: 10
Local steps: 1
Local learing rate: 0.005
Total number of clients: 10
Clients join in each round: 1.0
Client drop rate: 0.0
Time select: False
Time threthold: 10000
Global rounds: 1000
Running times: 1
Dataset: Cifar10
Local model: resnet
Using device: cuda
Cuda device id: 1
==================================================

============= Running time: 0th =============
Creating server and clients ...
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=10, bias=True)
)

Join ratio / total clients: 1.0 / 10
Finished creating server and clients.

-------------Round number: 0-------------

Evaluate global model
Averaged Train Loss: 2.3213
Averaged Test Accuracy: 0.0206
Averaged Test AUC: 0.4350
Std Test Accuracy: 0.0298
Std Test AUC: 0.1952
[0.08942321 0.05278899 0.09682663 0.12325938 0.09026271 0.08107601
 0.12783399 0.14661814 0.15407809 0.03783286]
------------------------- time cost ------------------------- 31.096789121627808

-------------Round number: 1-------------

Evaluate global model
Averaged Train Loss: 1.7129
Averaged Test Accuracy: 0.3459
Averaged Test AUC: 0.8197
Std Test Accuracy: 0.1919
Std Test AUC: 0.1161
0.07922381 0.04171738 0.11589704 0.08971052 0.13888843 0.09054749
 0.15870161 0.04775699 0.08897155 0.14858518]
------------------------- time cost ------------------------- 30.586694478988647

-------------Round number: 2-------------

Evaluate global model
Averaged Train Loss: 1.6435
Averaged Test Accuracy: 0.3587
Averaged Test AUC: 0.8259
Std Test Accuracy: 0.2039
Std Test AUC: 0.1298
[0.106406   0.15027036 0.08851658 0.08852451 0.07392563 0.04634652
 0.17133879 0.09023569 0.0425761  0.14185983]
------------------------- time cost ------------------------- 28.863666772842407

-------------Round number: 3-------------

Evaluate global model
Averaged Train Loss: 1.5702
Averaged Test Accuracy: 0.3850
Averaged Test AUC: 0.8378
Std Test Accuracy: 0.2125
Std Test AUC: 0.1275
[0.04035395 0.04180265 0.07892679 0.07446179 0.15021771 0.18437115
 0.09684364 0.0941073  0.08042304 0.15849198]
------------------------- time cost ------------------------- 26.870025634765625

-------------Round number: 4-------------

Evaluate global model
Averaged Train Loss: 1.6496
Averaged Test Accuracy: 0.3353
Averaged Test AUC: 0.8318
Std Test Accuracy: 0.2054
Std Test AUC: 0.1323
[0.0680152  0.09653848 0.13820005 0.15956749 0.03930082 0.03962609
 0.08557071 0.09370555 0.19718943 0.08228617]
------------------------- time cost ------------------------- 27.02398157119751

-------------Round number: 5-------------

Evaluate global model
Averaged Train Loss: 1.5053
Averaged Test Accuracy: 0.4057
Averaged Test AUC: 0.8528
Std Test Accuracy: 0.2056
Std Test AUC: 0.1349
[0.07809993 0.08172857 0.14664489 0.16490842 0.09984699 0.03260451
 0.20567194 0.03761897 0.06405691 0.08881888]
------------------------- time cost ------------------------- 26.659583806991577

-------------Round number: 6-------------

Evaluate global model
Averaged Train Loss: 1.4738
Averaged Test Accuracy: 0.4194
Averaged Test AUC: 0.8602
Std Test Accuracy: 0.2046
Std Test AUC: 0.1236
[0.16998938 0.09029333 0.19968669 0.06837672 0.03278496 0.08684947
 0.08038414 0.14696135 0.08968911 0.03498485]
------------------------- time cost ------------------------- 26.800599336624146

-------------Round number: 7-------------

Evaluate global model
Averaged Train Loss: 1.4688
Averaged Test Accuracy: 0.3828
Averaged Test AUC: 0.8591
Std Test Accuracy: 0.2170
Std Test AUC: 0.1268
[0.08830732 0.17624612 0.08472481 0.08246856 0.21841455 0.05892116
 0.1441769  0.03515795 0.02838165 0.08320099]
------------------------- time cost ------------------------- 26.716466426849365

-------------Round number: 8-------------

Evaluate global model
Averaged Train Loss: 1.4997
Averaged Test Accuracy: 0.3893
Averaged Test AUC: 0.8544
Std Test Accuracy: 0.2074
Std Test AUC: 0.1364
[0.15411431 0.20792824 0.03597993 0.07888121 0.08057002 0.08315336
 0.0878917  0.06133032 0.02885643 0.18129447]
------------------------- time cost ------------------------- 26.766752243041992

-------------Round number: 9-------------

Evaluate global model
